{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;;;;;;;;;;;ACRC;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ,wCAAwC,mBAAO,CAAC,4DAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;;;;;;;;;;;;;;AClBG;AACf;AACA,gDAAgD,aAAa;AAC7D;;AAEA;;AAEA,oCAAoC,WAAW;AAC/C;AACA;AACA;;AAEA;AACA;;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;ACNa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe,mBAAO,CAAC,6BAAQ;AAC/B,eAAe,mBAAO,CAAC,6BAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://unstableunicorns/./src/Card.ts","webpack://unstableunicorns/./src/Deck.ts","webpack://unstableunicorns/./node_modules/array-shuffle/index.js","webpack://unstableunicorns/webpack/bootstrap","webpack://unstableunicorns/webpack/runtime/define property getters","webpack://unstableunicorns/webpack/runtime/hasOwnProperty shorthand","webpack://unstableunicorns/webpack/runtime/make namespace object","webpack://unstableunicorns/./src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Card = void 0;\nclass Card {\n    constructor(name) {\n        this.name = name;\n    }\n}\nexports.Card = Card;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Deck = void 0;\nconst array_shuffle_1 = __importDefault(require(\"array-shuffle\"));\nclass Deck {\n    constructor() {\n        this.cards = [];\n    }\n    shuffle() {\n        this.cards = (0, array_shuffle_1.default)(this.cards);\n    }\n    addCard(card) {\n        this.cards.push(card);\n    }\n}\nexports.Deck = Deck;\n","export default function arrayShuffle(array) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new TypeError(`Expected an array, got ${typeof array}`);\n\t}\n\n\tarray = [...array];\n\n\tfor (let index = array.length - 1; index > 0; index--) {\n\t\tconst newIndex = Math.floor(Math.random() * (index + 1));\n\t\t[array[index], array[newIndex]] = [array[newIndex], array[index]];\n\t}\n\n\treturn array;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Card_1 = require(\"./Card\");\nconst Deck_1 = require(\"./Deck\");\nconst c1 = new Card_1.Card(\"C1\");\nconst c2 = new Card_1.Card(\"C2\");\nconst c3 = new Card_1.Card(\"C4\");\nconst deck = new Deck_1.Deck();\ndeck.addCard(c1);\ndeck.addCard(c2);\ndeck.addCard(c3);\ndeck.shuffle();\nconsole.log(deck);\nconsole.log(\"Sayed El Sayed...\");\n"],"names":[],"sourceRoot":""}